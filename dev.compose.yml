services:
  frontend:
    build:
      context: ./frontend
      dockerfile: dev.dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - leftclick-network

  backend:
    build:
      context: ./backend
      dockerfile: dev.dockerfile
    volumes:
      - ./backend:/app
    env_file:
      - ./.env.dev
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - leftclick-network

  db:
    image: mysql:9.4
    env_file:
      - ./.env.dev
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d
      - ./db/mysql-files:/var/lib/mysql-files
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      start_period: 30s
    networks:
      - leftclick-network

  nginx:
    build:
      context: ./nginx
      dockerfile: dev.dockerfile
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - leftclick-network

volumes:
  db_data:

networks:
  leftclick-network:
    driver: bridge
